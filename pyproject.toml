[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "brainstorm-ai"
version = "2.1.1"
description = "Système multi-agents pour le brainstorming créatif avec GPT"
authors = [{name = "Brainstorm AI Team"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["brainstorming", "ai", "gpt", "creativity", "multi-agent"]

dependencies = [
    "openai>=1.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
]
all = ["brainstorm-ai[dev]"]

[project.urls]
Homepage = "https://github.com/yourusername/brainstorm-ai"
Documentation = "https://brainstorm-ai.readthedocs.io"
Repository = "https://github.com/yourusername/brainstorm-ai"
Issues = "https://github.com/yourusername/brainstorm-ai/issues"

[project.scripts]
brainstorm-ai = "brainstorm_ai.cli.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]





[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B905",  # zip without explicit strict= parameter
]
unfixable = ["B"]

[tool.ruff.lint.per-file-ignores]
"scripts/*" = ["T201"]  # print statements allowed in scripts 